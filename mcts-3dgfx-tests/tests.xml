<?xml version="1.0" encoding="UTF-8"?>
<testdefinition version="1.0">
<description></description>
<suite name="Graphics">
<description></description>
<set name="3dgfx" >

<case name="3dgfx_dri_enable" manual="false" timeout="90">
	<description><![CDATA[<p>Purpose:<br />
Check whether DRI is enabled, through glxinfo<br />
if glxinfo is not installed, skip this test case<br />
make sure the X has started before this test<br />
Run Instructions:<br />
1. glxinfo | grep &quot;direct rendering&quot;<br />
2.  glxinfo | grep &quot;OpenGL renderer string&quot;<br />
Pass/Fail Criteria:<br />
For netbook, following words should be shown:<br />
&quot;direct rendering: Yes&quot;<br />
&quot;OpenGL renderer string: Mesa DRI Intel(R) 945GME GEM ,,,&quot;</p>
<p>For MRST, following words should be shown:<br />
&quot;direct rendering: Yes&quot;<br />
&quot;OpenGL renderer string: PowerVR SGX535&quot;</p>]]></description>

<step expected_result="0">/opt/mcts-3dgfx-tests/3dgfx_dri_enable.sh</step>

</case>

<case name="3dgfx_dri2_enable" manual="false" timeout="90">
	<description><![CDATA[<p>Purpose:<br />
Check if DRI2 is enabled.<br />
Run Instructions:<br />
Open /tmp/Xorg.0.log, or /var/log/Xorg.0.log, then Check if DRI2 is enbled. it should be:<br />
&quot;[DRI2] Setup complete&quot; <br />
&quot;direct rendering: DRI2 Enable&quot;<br />
Pass/Fail Criteria:<br />
&quot;[DRI2] Setup complete&quot; <br />
&quot;direct rendering: DRI2 Enable&quot;</p>]]></description>

<step expected_result="0">/opt/mcts-3dgfx-tests/3dgfx_dri2_enable.sh</step>

</case>

<case name="3dgfx_aiglx_enable" manual="false" timeout="90">
	<description><![CDATA[<p>Purpose:<br />
Check AIGLX is enabled</p>
<p><br />
Run Instructions:<br />
Open /tmp/Xorg.0.log, or /var/log/Xorg.0.log, then Check if AIGLX is enbled.</p>
<p><br />
Pass/Fail Criteria:<br />
AIGLX: enabled</p>]]></description>

<step expected_result="0">/opt/mcts-3dgfx-tests/3dgfx_aiglx_enable.sh</step>

</case>

<case name="3dgfx_tfp_support" manual="false" timeout="90">
	<description><![CDATA[<p>Purpose:<br />
<br />
Check GL feature GLX_EXT_texture_from_pixmap<br />
Run Instructions:<br />
glxinfo | grep &quot;GLX_EXT_texture_from_pixmap&quot;<br />
Pass/Fail Criteria:<br />
&quot;GLX_EXT_texture_from_pixmap&quot; is in the supported feature list<br />
tfp is supported</p>]]></description>

<step expected_result="0">/opt/mcts-3dgfx-tests/3dgfx_tfp_support.sh</step>

</case>

<case name="3dgfx_fbo_support" manual="false" timeout="90">
	<description><![CDATA[<p>Purpose:<br />
<br />
check GL feature GL_EXT_framebuffer_object<br />
Run Instructions:<br />
glxinfo | grep &quot;GL_EXT_framebuffer_object&quot;<br />
Pass/Fail Criteria:<br />
&quot;GL_EXT_framebuffer_object&quot; is in the supported feature list.<br />
fbo is supported</p>]]></description>

<step expected_result="0">/opt/mcts-3dgfx-tests/3dgfx_fbo_support.sh</step>

</case>

<case name="3dgfx_glxgears_run" manual="false" timeout="90">
	<description><![CDATA[<p>Purpose:<br />
Run basic 3D application --glxgears</p>
<p><br />
Run Instructions:<br />
1. If there is not glx-utils package by deffault, install it at first. (yum install glx-utils)<br />
2. run &quot;glxgears&quot;</p>
<p><br />
Pass/Fail Criteria:<br />
3D gears work well</p>]]></description>

<step expected_result="0">/opt/mcts-3dgfx-tests/3dgfx_glxgears_run.sh</step>

</case>
</set>
</suite>
</testdefinition>
