<?xml version="1.0" encoding="UTF-8"?>
<testdefinition version="1.0">
 <suite domain="Location" name="mwts-location-tests">
  <set type="Functional positive" name="FUTE-location">
   <description>FUNCTIONAL tests of mwts-location, script file: mwts-location.cfg.</description>
   <case name="FUTE-GPS-TestFix" state="Design">
    <description>Purpose: Get GPS cold fix.
Method: Using Qt Mobility location API.
Pre/Post-Conditions: Device located so that signal receivable from at least 4 satellites.
Pass/Fail Criteria: Test runs successfully, test does not crash.</description>
    <step>min -c -t 'FUTE-GPS-TestFix'</step>
   </case>
   <case name="FUTE-GPS-GetCoordinate">
    <description>Purpose: Get GPS device coordicates.
Method: Using Qt Mobility location API.
Pre/Post-Conditions: Device located so that signal receivable from at least 4 satellites.
Pass/Fail Criteria: Test runs successfully, test does not crash.</description>
    <step>min -c -t 'FUTE-GPS-GetCoordinate'</step>
   </case>
  </set>
  <set type="Reliability" name="ITER-location">
   <description>ITERATIVE tests of mwts-location, script file: mwts-location-nft.cfg.</description>
   <case timeout="600" name="NFT-GPS-HotFix-ITER">
    <description>Purpose: Get GPS hot fix. Tests reliability of the positioning engine.
Method: Using Qt Mobility location API.
Pre/Post-Conditions: Device located so that signal receivable from at least 4 satellites.
Pass/Fail Criteria: Test runs successfully, test does not crash.</description>
    <step>min -c -t 'NFT-GPS-HotFix-ITER'</step>
   </case>
  </set>
  <set type="Performance" name="LATE-location">
   <description>LATENCY tests of mwts-location, script file: mwts-location-nft.cfg.</description>
   <case timeout="4200" name="NFT-GPS-HotFix-LATE">
    <description>Purpose: Get GPS hot fix. Tests performance of the positioning engine.
Method: Using Qt Mobility location API.
Pre/Post-Conditions: Device located so that signal receivable from at least 4 satellites.
Pass/Fail Criteria: Test runs successfully, test does not crash.</description>
    <step>min -c -t 'NFT-GPS-HotFix-LATE'</step>
   </case>
   <case timeout="4200" name="NFT-GPS-ColdFix-LATE" state="Design">
    <description>Purpose: Get GPS cold fix. Tests performance of the positioning engine.
Method: Using Qt Mobility location API.
Pre/Post-Conditions: Device located so that signal receivable from at least 4 satellites.
Pass/Fail Criteria: Test runs successfully, test does not crash.</description>
    <step>min -c -t 'NFT-GPS-ColdFix-LATE'</step>
   </case>
   <case timeout="4200" name="NFT-GPS-ColdFix_with_network_access-LATE" state="Design">
    <description>Purpose: Get GPS cold fix. Tests performance of the positioning engine.
Method: Using Qt Mobility location API.
Pre/Post-Conditions: Device located so that signal receivable from at least 4 satellites. Sim card should be in device and network should be available.
Pass/Fail Criteria: Test runs successfully, test does not crash.</description>
    <step>min -c -t 'NFT-GPS-ColdFix_with_network_access-LATE'</step>
   </case>
  </set>
  <set name="ACCURACY-location">
   <description>ACCURACY tests of mwts-location, script file: mwts-location-nft.cfg.</description>
   <case timeout="1200" name="NFT-GPS-Accuracy">
    <description>Purpose: Get GPS hot or cold fixes. Tests the accuracy of the positioning engine.
Method: Using Qt Mobility location API.
Pre/Post-Conditions: Device antenna positon is set in assets configuration file. Device is located so that signal receivable from at least 4 satellites.
Pass/Fail Criteria: Test runs successfully, fixes distance to right antenna place is less than given value in percent given in configuration file.</description>
    <step>min -c -t 'NFT-GPS-Accuracy'</step>
   </case>
  </set>
 </suite>
</testdefinition>
