<?xml version='1.0' encoding='ISO-8859-1'?>
<testdefinition version="0.1">
 <suite domain="Networking" name="mwts-network-scripts">
  <set description="Networking functionality" type="Functional" name="FUTE-WLAN">
   <case description="Purpose: Test scanning wlan access points&#xa;      Method: Bring wlan interface up and do a scan via bearer management &#xa;      Pre/Post-Conditions: none&#xa;      Pass/Fail Criteria: Access points are found if any, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="FUTE-WLAN-Scan">
    <step>min -c -t 'FUTE-WLAN-Scan'</step>
   </case>
   <case description="Purpose: Test connecting to wlan access point&#xa;      Method: Bring wlan interface up and do ap connection via bearer management &#xa;      Pre/Post-Conditions: none&#xa;      Pass/Fail Criteria: connection to unsecured access point is made, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="FUTE-WLAN-Connect">
    <step>min -c -t 'FUTE-WLAN-Connect'</step>
   </case>
   <case description="Purpose: Test connecting to secured wlan access point&#xa;      Method: Bring wlan interface up and do a WEP ap connection via bearer management &#xa;      Pre/Post-Conditions: none&#xa;      Pass/Fail Criteria: connection to access point is made, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="FUTE-WLAN-Connect_WEP">
    <step>min -c -t 'FUTE-WLAN-Connect_WEP'</step>
   </case>
   <case description="Purpose: Test connecting to secured wlan access point&#xa;      Method: Bring wlan interface up and create a WPA2 aes secured ap connection via bearer management &#xa;      Pre/Post-Conditions: none&#xa;      Pass/Fail Criteria: connection to access point is made, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="FUTE-WLAN-Connect_WPA2aes">
    <step>min -c -t 'FUTE-WLAN-Connect_WPA2aes'</step>
   </case>
   <case description="Purpose: Test connecting to secured wlan access point&#xa;      Method: Bring wlan interface up and create a WPA tkip secured ap connection via bearer management &#xa;      Pre/Post-Conditions: none&#xa;      Pass/Fail Criteria: connection to access point is made, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="FUTE-WLAN-Connect_WPAtkip">
    <step>min -c -t 'FUTE-WLAN-Connect_WPAtkip'</step>
   </case>
   <case name="FUTE-WLAN-Connect_default">
    <description>Purpose: Test connecting to wlan access point
      Method: Bring wlan interface up and do ap connection via bearer management 
      Pre/Post-Conditions: none
      Pass/Fail Criteria: connection to unsecured access point is made, test does not crash 
      References: 
      Required test data: None.</description>
    <step>min -c -t 'FUTE-WLAN-Connect_default'</step>
   </case>
   <case description="Purpose: Test disconnecting from a wlan access point&#xa;      Method: Disconnect ap connection and bring wlan interface down &#xa;      Pre/Post-Conditions: none&#xa;      Pass/Fail Criteria: connection is disconnected, interface is down, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="FUTE-WLAN-Disconnect">
    <step>min -c -t 'FUTE-WLAN-Disconnect'</step>
   </case>
   <case description="Purpose: Test connecting to unsecured adhoc wlan access point&#xa;      Method: Bring wlan interface up and create connection&#xa;      Pre/Post-Conditions: none&#xa;      Pass/Fail Criteria: connection to access point is made, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="FUTE-WLAN-Connect_Adhoc">
    <step>min -c -t 'FUTE-WLAN-Connect_Adhoc'</step>
   </case>
   <case description="Purpose: Test connecting to wep adhoc wlan access point&#xa;      Method: Bring wlan interface up and create connection&#xa;      Pre/Post-Conditions: none&#xa;      Pass/Fail Criteria: connection to access point is made, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="FUTE-WLAN-Connect_Adhoc_WEP">
    <step>min -c -t 'FUTE-WLAN-Connect_Adhoc_WEP'</step>
   </case>
   <case description="Purpose: Test connecting to unsecured ap and download file from ftp server&#xa;      Method: Bring wlan interface up and create connection&#xa;      Pre/Post-Conditions: none&#xa;      Pass/Fail Criteria: connection to access point is made, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="FUTE-WLAN-Download_file_10M">
    <step>min -c -t 'FUTE-WLAN-Download_file_10M'</step>
   </case>
   <case description="Purpose: Test connecting to unsecured ap and upload file from to server&#xa;      Method: Bring wlan interface up and create connection&#xa;      Pre/Post-Conditions: none&#xa;      Pass/Fail Criteria: connection to access point is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="FUTE-WLAN-Upload_file_10M">
    <step>min -c -t 'FUTE-WLAN-Upload_file_10M'</step>
   </case>
   <case description="Purpose: Test connecting to wep secured ap and download file from ftp server&#xa;      Method: Bring wlan interface up and create connection&#xa;      Pre/Post-Conditions: none&#xa;      Pass/Fail Criteria: connection to access point is made, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="FUTE-WLAN-Download_file_10M_WEP">
    <step>min -c -t 'FUTE-WLAN-Download_file_10M_WEP'</step>
   </case>
   <case description="Purpose: Test connecting to wep ap and upload file from to server&#xa;      Method: Bring wlan interface up and create connection&#xa;      Pre/Post-Conditions: none&#xa;      Pass/Fail Criteria: connection to access point is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="FUTE-WLAN-Upload_file_10M_WEP">
    <step>min -c -t 'FUTE-WLAN-Upload_file_10M_WEP'</step>
   </case>
   <case description="Purpose: Test connecting to wpa tkip secured ap and download file from ftp server&#xa;      Method: Bring wlan interface up and create connection&#xa;      Pre/Post-Conditions: none&#xa;      Pass/Fail Criteria: connection to access point is made, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="FUTE-WLAN-Download_file_10M_WPA-TKIP">
    <step>min -c -t 'FUTE-WLAN-Download_file_10M_WPA-TKIP'</step>
   </case>
   <case description="Purpose: Test connecting to wpa tkip secured ap and upload file from to server&#xa;      Method: Bring wlan interface up and create connection&#xa;      Pre/Post-Conditions: none&#xa;      Pass/Fail Criteria: connection to access point is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="FUTE-WLAN-Upload_file_10M_WPA-TKIP">
    <step>min -c -t 'FUTE-WLAN-Upload_file_10M_WPA-TKIP'</step>
   </case>
   <case description="Purpose: Test connecting to wpa2 aes secured ap and download file from ftp server&#xa;      Method: Bring wlan interface up and create connection&#xa;      Pre/Post-Conditions: none&#xa;      Pass/Fail Criteria: connection to access point is made, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="FUTE-WLAN-Download_file_10M_WPA2-AES">
    <step>min -c -t 'FUTE-WLAN-Download_file_10M_WPA2-AES'</step>
   </case>
   <case description="Purpose: Test connecting to wpa2 aes secured ap and upload file from to server&#xa;      Method: Bring wlan interface up and create connection&#xa;      Pre/Post-Conditions: none&#xa;      Pass/Fail Criteria: connection to access point is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="FUTE-WLAN-Upload_file_10M_WPA2-AES">
    <step>min -c -t 'FUTE-WLAN-Upload_file_10M_WPA2-AES'</step>
   </case>
   <case name="FUTE-WLAN-Tethering_on">
    <description>Purpose: Test setting the tethering on
      Method: Set tethering on 
      Pre/Post-Conditions: none
      Pass/Fail Criteria: Tethering is on, test does not crash 
      References: 
      Required test data: None.</description>
    <step>min -c -t 'FUTE-WLAN-Tethering_on'</step>
   </case>
   <case name="FUTE-WLAN-Tethering_off">
    <description>Purpose: Test setting the tethering off
      Method: Set tethering off
      Pre/Post-Conditions: none
      Pass/Fail Criteria: Tethering is off, test does not crash 
      References: 
      Required test data: None.</description>
    <step>min -c -t 'FUTE-WLAN-Tethering_off'</step>
   </case>
  </set>
  <set description="Networking functionality" type="Functional" name="FUTE-PSD">
   <case description="Purpose: Test connecting to a psd network&#xa;      Method: Bring up gprs0 interface and create connection to PSD network &#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;      Pass/Fail Criteria: connection to psd network is made, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="FUTE-PSD-Connect">
    <step>min -c -t 'FUTE-PSD-Connect'</step>
   </case>
   <case description="Purpose: Test disconnecting from a psd network&#xa;      Method: Bring up gprs0 interface and create connection to PSD network &#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;      Pass/Fail Criteria: connection to psd network is disconnected, interface is down, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="FUTE-PSD-Disconnect">
    <step>min -c -t 'FUTE-PSD-Disconnect'</step>
   </case>
   <case description="Purpose: Test connecting to a 3g psd network&#xa;      Method: Bring up gprs0 interface and create connection to PSD network &#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;      Pass/Fail Criteria: connection to psd network is made, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="FUTE-PSD-3G_Connect">
    <step>min -c -t 'FUTE-PSD-3G_Connect'</step>
   </case>
   <case description="Purpose: Create 3g connection and download 10MB file from ftp server&#xa;      Method: Bring up gprs0 interface and create connection to PSD network, download file from ftp server &#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;      Pass/Fail Criteria: connection to 3g network is is created, file downloaded, test does not crash&#xa;      References: &#xa;      Required test data: None." timeout="10" name="FUTE-PSD-3G_Download_10M_file">
    <step>min -c -t 'FUTE-PSD-3G_Download_10M_file'</step>
   </case>
   <case description="Purpose: Create 3g connection and upload 10MB file to ftp server&#xa;      Method: Bring up gprs0 interface and create connection to 3g network, upload file to ftp server&#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;      Pass/Fail Criteria: connection to 3g network is is created, file uploaded, test does not crash&#xa;      References: &#xa;      Required test data: None." timeout="10" name="FUTE-PSD-3G_Upload_10M_file">
    <step>min -c -t 'FUTE-PSD-3G_Upload_10M_file'</step>
   </case>
  </set>
  <set description="Networking functionality" type="Functional" name="DATAFLOW-PSD">
   <case description="Purpose: Test downloading 2.5M file via 2g psd network&#xa;      Method: Bring up gprs0 interface and create connection to PSD network, change RAT mode to 2g, download 2.5M file via ftp&#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;      Pass/Fail Criteria: connection to psd network is made, file is downloaded test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="300" name="DATAFLOW-PSD-2g_Download_2.5M_file">
    <step>min -c -t 'DATAFLOW-PSD-2g_Download_2.5M_file'</step>
   </case>
   <case description="Purpose: Test uploading 2.5M file via 2g psd network&#xa;      Method: Bring up gprs0 interface and create connection to PSD network, change RAT mode to 2g, upload 2.5M file via ftp&#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;      Pass/Fail Criteria: connection to psd network is made, file is 2g_Upload_2.5M_file test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="300" name="DATAFLOW-PSD-2g_Upload_2.5M_file">
    <step>min -c -t 'DATAFLOW-PSD-2g_Upload_2.5M_file'</step>
   </case>
   <case description="Purpose: Test downloading 2.5M file via dual psd network&#xa;      Method: Bring up gprs0 interface and create connection to PSD network, change RAT mode to 2g, download 2.5M file via ftp&#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;      Pass/Fail Criteria: connection to psd network is made, file is downloaded test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="DATAFLOW-PSD-dual_Download_2.5M_file">
    <step>min -c -t 'DATAFLOW-PSD-dual_Download_2.5M_file'</step>
   </case>
   <case description="Purpose: Test uploading 2.5M file via dual psd network&#xa;      Method: Bring up gprs0 interface and create connection to PSD network, change RAT mode to dual, upload 2.5M file via ftp&#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;      Pass/Fail Criteria: connection to psd network is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="300" name="DATAFLOW-PSD-dual_Upload_2.5M_file">
    <step>min -c -t 'DATAFLOW-PSD-dual_Upload_2.5M_file'</step>
   </case>
   <case description="Purpose: Test downloading 2.5M file via 3g psd network&#xa;      Method: Bring up gprs0 interface and create connection to PSD network, change RAT mode to 3g, download 2.5M file via ftp&#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;      Pass/Fail Criteria: connection to psd network is made, file is downloaded test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="300" name="DATAFLOW-PSD-3g_Download_10M_file">
    <step>min -c -t 'DATAFLOW-PSD-3g_Download_10M_file'</step>
   </case>
   <case description="Purpose: Test uploading 2.5M file via 3g psd network&#xa;      Method: Bring up gprs0 interface and create connection to PSD network, change RAT mode to 3g, upload 2.5M file via ftp&#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;      Pass/Fail Criteria: connection to psd network is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="300" name="DATAFLOW-PSD-3g_Upload_10M_file">
    <step>min -c -t 'DATAFLOW-PSD-3g_Upload_10M_file'</step>
   </case>
  </set>
  <set description="Networking functionality" type="Functional" name="DATAFLOW-WLAN">
   <case description="Purpose: Test wlan scan&#xa;      Method: Bring up wlan interface and do a wlan ap scan &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: scan is made, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="DATAFLOW-WLAN-Scan">
    <step>min -c -t 'DATAFLOW-WLAN-Scan'</step>
   </case>
   <case description="Purpose: Test connecting to a wlan ap&#xa;      Method: Bring up wlan interface and create connection to access point &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to a ap is created, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="DATAFLOW-WLAN-Connect">
    <step>min -c -t 'DATAFLOW-WLAN-Connect'</step>
   </case>
   <case description="Purpose: Test downloading file via wlan and ftp&#xa;      Method: Bring up wlan interface, download 100k file from ftp server  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="300" name="DATAFLOW-WLAN-Download_100k_file">
    <step>min -c -t 'DATAFLOW-WLAN-Download_100k_file'</step>
   </case>
   <case description="Purpose: Test uploading file via wlan to ftp&#xa;      Method: Bring up wlan interface, upload 100k file to ftp server&#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="300" name="DATAFLOW-WLAN-Upload_100k_file">
    <step>min -c -t 'DATAFLOW-WLAN-Upload_100k_file'</step>
   </case>
   <case name="DATAFLOW-WLAN-Download_100k_http">
    <description>Purpose: Test downloading file via wlan and http
      Method: Bring up wlan interface, download 100k file via http  
      Pre/Post-Conditions: 
      Pass/Fail Criteria: connection to ap is made, file is downloaded, test does not crash 
      References: 
      Required test data: None.</description>
    <step>min -c -t 'DATAFLOW-WLAN-Download_100k_http'</step>
   </case>
  </set>
  <set description="Networking functionality" type="Iterative" name="NFT-PSD-Robustness">
   <case description="Purpose: Test download troughput with EDGE psd network&#xa;      Method: Bring up gprs0 interface and create connection to PSD network. Measure troughput with iperf&#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;      Pass/Fail Criteria: connection to EDGE network is made, troughput is measured and test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="300" name="NFT-PSD-EDGE_Download_throughput-THRO">
    <step>min -c -t 'NFT-PSD-EDGE_Download_throughput-THRO'</step>
   </case>
   <case description="Purpose: Test upload troughput with EDGE psd network&#xa;      Method: Bring up gprs0 interface and create connection to PSD network. Measure troughput with iperf&#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;      Pass/Fail Criteria: connection to EDGE network is made, troughput is measured and test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="300" name="NFT-PSD-EDGE_Upload_throughput-THRO">
    <step>min -c -t 'NFT-PSD-EDGE_Upload_throughput-THRO'</step>
   </case>
   <case description="Purpose: Test download troughput with 3.5g psd network&#xa;      Method: Bring up gprs0 interface and create connection to PSD network. Measure troughput with iperf&#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;      Pass/Fail Criteria: connection to 3.5g network is made, troughput is measured and test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="300" name="NFT-PSD-HSDPA_Download_throughput-THRO">
    <step>min -c -t 'NFT-PSD-HSDPA_Download_throughput-THRO'</step>
   </case>
   <case description="Purpose: Test upload troughput with 3.5g psd network&#xa;      Method: Bring up gprs0 interface and create connection to PSD network. Measure troughput with iperf&#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;      Pass/Fail Criteria: connection to 3.5g network is made, troughput is measured and test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="300" name="NFT-PSD-HSUPA_Upload_throughput-THRO">
    <step>min -c -t 'NFT-PSD-HSUPA_Upload_throughput-THRO '</step>
   </case>
   <case description="Purpose: Test downloading file via 3g psd network&#xa;      Method: Bring up gprs0 interface and create connection to PSD network. Download file from ftp server &#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;      Pass/Fail Criteria: connection to psd network is made, RAT mode is changed to 3g, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="300" name="NFT-PSD-3g_Download_file_1M-ITER">
    <step>min -c -t 'NFT-PSD-3g_Download_file_1M-ITER'</step>
   </case>
   <case description="Purpose: Test uploading file via 3g psd network&#xa;      Method: Bring up gprs0 interface and create connection to PSD network. Upload file from ftp server &#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;        Pass/Fail Criteria: connection to psd network is made, RAT mode is changed to 3g, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="300" name="NFT-PSD-3g_Upload_file_1M-ITER">
    <step>min -c -t 'NFT-PSD-3g_Upload_file_1M-ITER'</step>
   </case>
   <case description="Purpose: Test file iterative file download trough 3g network&#xa;      Method: Connection is made, file is downloaded from ftp server via 3g network connection, disconnect. Repeated 120 times. &#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;        Pass/Fail Criteria: connection to psd network is made, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-PSD-Connect_download_file_large_disconnect_3g-ITER">
    <step>min -c -t 'NFT-PSD-Connect_download_file_large_disconnect_3g-ITER'</step>
   </case>
   <case description="Purpose: Test file iterative file upload trough 3g network&#xa;      Method: Connection is made, file is uploaded to ftp server via 3g network connection, disconnect. Repeated 120 times.&#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;        Pass/Fail Criteria: connection to psd network is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-PSD-Connect_upload_file_large_disconnect_3g-ITER">
    <step>min -c -t 'NFT-PSD-Connect_upload_file_large_disconnect_3g-ITER'</step>
   </case>
   <case description="Purpose: Test file iterative file download trough 3g network&#xa;      Method: Connection is made, file is downloaded from ftp server via 3g network connection, disconnect. Repeated 120 times. &#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;        Pass/Fail Criteria: connection to psd network is made, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-PSD-Connect_download_file_small_disconnect_3g-ITER">
    <step>min -c -t 'NFT-PSD-Connect_download_file_large_disconnect_3g-ITER'</step>
   </case>
   <case description="Purpose: Test file iterative file upload trough 3g network&#xa;      Method: Connection is made, file is uploaded to ftp server via 3g network connection, disconnect. Repeated 120 times.&#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;        Pass/Fail Criteria: connection to psd network is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-PSD-Connect_upload_file_small_disconnect_3g-ITER">
    <step>min -c -t 'NFT-PSD-Connect_upload_file_large_disconnect_3g-ITER'</step>
   </case>
   <case description="Purpose: Test file iterative file download trough 2g network&#xa;      Method: Connection is made, file is downloaded from ftp server via 3g network connection, disconnect. Repeated 120 times. &#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;        Pass/Fail Criteria: connection to psd network is made, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-PSD-Connect_upload_file_large_disconnect_2g-ITER">
    <step>min -c -t 'NFT-PSD-Connect_upload_file_large_disconnect_2g-ITER'</step>
   </case>
   <case description="Purpose: Test file iterative file upload trough 2g network&#xa;      Method: Connection is made, file is uploaded to ftp server via 3g network connection, disconnect. Repeated 120 times.&#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;        Pass/Fail Criteria: connection to psd network is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-PSD-Connect_download_file_large_disconnect_2g-ITER">
    <step>min -c -t 'NFT-PSD-Connect_download_file_large_disconnect_2g-ITER'</step>
   </case>
   <case description="Purpose: Test file iterative file download trough 2g network&#xa;      Method: Connection is made, file is downloaded from ftp server via 3g network connection, disconnect. Repeated 120 times. &#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;        Pass/Fail Criteria: connection to psd network is made, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-PSD-Connect_upload_file_small_disconnect_2g-ITER">
    <step>min -c -t 'NFT-PSD-Connect_upload_file_small_disconnect_2g-ITER'</step>
   </case>
   <case description="Purpose: Test file iterative file upload trough 2g network&#xa;      Method: Connection is made, file is uploaded to ftp server via 3g network connection, disconnect. Repeated 120 times.&#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;        Pass/Fail Criteria: connection to psd network is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-PSD-Connect_download_file_small_disconnect_2g-ITER">
    <step>min -c -t 'NFT-PSD-Connect_download_file_small_disconnect_2g-ITER'</step>
   </case>
   <case description="Purpose: Test file iterative file download trough 3g network&#xa;      Method: Connection is made, file is downloaded 120 times from ftp server via 3g network connection, disconnect. &#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;        Pass/Fail Criteria: connection to psd network is made, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-PSD-Download_file_large_3g-ITER">
    <step>min -c -t 'NFT-PSD-Download_file_large_3g-ITER'</step>
   </case>
   <case description="Purpose: Test file iterative file upload trough 3g network&#xa;      Method: Connection is made, file is uploaded 120 times to ftp server via 3g network connection, disconnect.&#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;        Pass/Fail Criteria: connection to psd network is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-PSD-Upload_file_large_3g-ITER">
    <step>min -c -t 'NFT-PSD-Upload_file_large_3g-ITER'</step>
   </case>
   <case description="Purpose: Test file iterative file download trough 3g network&#xa;      Method: Connection is made, file is downloaded 120 times from ftp server via 3g network connection, disconnect. &#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;        Pass/Fail Criteria: connection to psd network is made, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-PSD-Download_file_small_3g-ITER">
    <step>min -c -t 'NFT-PSD-Download_file_small_3g-ITER'</step>
   </case>
   <case description="Purpose: Test file iterative file upload trough 3g network&#xa;      Method: Connection is made, file is uploaded 120 times to ftp server via 3g network connection, disconnect.&#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;        Pass/Fail Criteria: connection to psd network is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-PSD-Upload_file_small_3g-ITER">
    <step>min -c -t 'NFT-PSD-Upload_file_small_3g-ITER'</step>
   </case>
   <case description="Purpose: Test file iterative file download trough 2g network&#xa;      Method: Connection is made, file is downloaded 120 times from ftp server via 3g network connection, disconnect. &#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;        Pass/Fail Criteria: connection to psd network is made, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-PSD-Download_file_small_2g-ITER">
    <step>min -c -t 'NFT-PSD-Download_file_small_2g-ITER'</step>
   </case>
   <case description="Purpose: Test file iterative file upload trough 2g network&#xa;      Method: Connection is made, file is uploaded 120 times to ftp server via 3g network connection, disconnect.&#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;        Pass/Fail Criteria: connection to psd network is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-PSD-Upload_file_small_2g-ITER">
    <step>min -c -t 'NFT-PSD-Upload_file_small_2g-ITER'</step>
   </case>
   <case description="Purpose: Test file iterative file download trough 2g network&#xa;      Method: Connection is made, file is downloaded 120 times from ftp server via 3g network connection, disconnect. &#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;        Pass/Fail Criteria: connection to psd network is made, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-PSD-Download_file_large_2g-ITER">
    <step>min -c -t 'NFT-PSD-Download_file_large_2g-ITER'</step>
   </case>
   <case description="Purpose: Test file iterative file upload trough 2g network&#xa;      Method: Connection is made, file is uploaded 120 times to ftp server via 3g network connection, disconnect.&#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;        Pass/Fail Criteria: connection to psd network is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-PSD-Upload_file_large_2g-ITER">
    <step>min -c -t 'NFT-PSD-Upload_file_large_2g-ITER'</step>
   </case>
  </set>
  <set description="Networking performance" type="Throughput" name="NFT-PSD-Performance">
   <case description="Purpose: Test upload troughput file via 3g psd network&#xa;      Method: Iperf network tool is used to measure the performance, the test case makes 7 iterations and one iteration takes 180 seconds.&#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;      Pass/Fail Criteria: connection to psd network is made, RAT mode is changed to 3g, iperf client executed, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-PSD-3g_Upload_throughput-THRO">
    <step>min -c -t 'NFT-PSD-3g_Upload_throughput-THRO'</step>
   </case>
   <case description="Purpose: Test download throughput via 3g psd network&#xa;      Method: Iperf network tool is used to measure the performance, the test case makes 7 iterations and one iteration takes 180 seconds.&#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;        Pass/Fail Criteria: connection to psd network is made, RAT mode is changed to 3g, iperf server measurements done, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-PSD-3g_Download_throughput-THRO">
    <step>min -c -t 'NFT-PSD-3g_Download_throughput-THRO'</step>
   </case>
   <case description="Purpose: Test upload troughput file via 2g psd network&#xa;      Method: Iperf network tool is used to measure the performance, the test case makes 7 iterations and one iteration takes 180 seconds.&#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;      Pass/Fail Criteria: connection to psd network is made, RAT mode is changed to 2g, iperf client executed, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-PSD-2g_Upload_throughput-THRO">
    <step>min -c -t 'NFT-PSD-2g_Upload_throughput-THRO'</step>
   </case>
   <case description="Purpose: Test download throughput via 2g psd network&#xa;      Method: Iperf network tool is used to measure the performance, the test case makes 7 iterations and one iteration takes 180 seconds.&#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;        Pass/Fail Criteria: connection to psd network is made, RAT mode is changed to 2g, iperf server measurements done, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-PSD-2g_Download_throughput-THRO">
    <step>min -c -t 'NFT-PSD-2g_Download_throughput-THRO'</step>
   </case>
   <case description="Purpose: Test upload troughput file via dual psd network&#xa;      Method: Iperf network tool is used to measure the performance, the test case makes 7 iterations and one iteration takes 180 seconds. &#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;      Pass/Fail Criteria: connection to psd network is made, RAT mode is changed to dual, iperf client executed, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-PSD-dual_Upload_throughput-THRO">
    <step>min -c -t 'NFT-PSD-dual_Upload_throughput-THRO'</step>
   </case>
   <case description="Purpose: Test download throughput via dual psd network&#xa;      Method: Iperf network tool is used to measure the performance, the test case makes 7 iterations and one iteration takes 180 seconds.&#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;        Pass/Fail Criteria: connection to psd network is made, RAT mode is changed to dual, iperf server measurements done, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-PSD-dual_Download_throughput-THRO">
    <step>min -c -t 'NFT-PSD-dual_Download_throughput-THRO'</step>
   </case>
  </set>
  <set description="Networking functionality" type="Long lasting" name="NFT-PSD-LOLA">
   <case description="Purpose: Test upload 2 hour upload troughput via 3g psd network&#xa;      Method: Iperf network tool is used to measure the performance, the test measures for 2 hours.&#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;      Pass/Fail Criteria: connection to psd network is made, RAT mode is changed to 3g, iperf client executed 2 hours, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-PSD-3g_Upload-LOLA">
    <step>min -c -t 'NFT-PSD-3g_Upload-LOLA'</step>
   </case>
   <case description="Purpose: Test 2 hour download throughput via 3g psd network&#xa;      Method: Iperf network tool is used to measure the performance, the test measures for 2 hours.&#xa;      Pre/Post-Conditions: SIM card is inserted &#xa;        Pass/Fail Criteria: connection to psd network is made, RAT mode is changed to dual, iperf server measurements for 2 hours are made, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-PSD-3g_Download-LOLA">
    <step>min -c -t 'NFT-PSD-3g_Download-LOLA'</step>
   </case>
  </set>
  <set description="Networking functionality" type="Iterative" name="NFT-WLAN-Robustness">
   <case description="Purpose: Test iterative wlan scan&#xa;      Method: Scans wlan access points via libbearer &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: scan is made, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Scan-ITER">
    <step>min -c -t 'NFT-WLAN-Scan-ITER'</step>
   </case>
   <case description="Purpose: Test download 10M file 120 iterations&#xa;      Method: Bring up wlan interface and download file from ftp server &#xa;      Pre/Post-Conditions: &#xa;        Pass/Fail Criteria: connection to ap made, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="300" name="NFT-WLAN-Download_file_10M-ITER">
    <step>min -c -t 'NFT-WLAN-Download_file_10M-ITER'</step>
   </case>
   <case description="Purpose: Test upload 10M file 120 iterations&#xa;      Method: Bring up wlan interface and upload file to ftp server &#xa;      Pre/Post-Conditions: &#xa;        Pass/Fail Criteria: connection to ap made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="300" name="NFT-WLAN-Upload_file_10M-ITER">
    <step>min -c -t 'NFT-WLAN-Upload_file_10M-ITER'</step>
   </case>
   <case description="Purpose: Test download file from ftp server via unsecured connection&#xa;      Method: Bring up wlan interface, download 100k file 120 time from ftp server  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Download_file_small-ITER">
    <step>min -c -t 'NFT-WLAN-Download_file_small-ITER'</step>
   </case>
   <case description="Purpose: Test upload file from ftp server via unsecured connection&#xa;      Method: Bring up wlan interface, upload 100k file 120 time from ftp server  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Upload_file_small-ITER">
    <step>min -c -t 'NFT-WLAN-Upload_file_small-ITER'</step>
   </case>
   <case description="Purpose: Test download file from ftp server via wep connection&#xa;      Method: Bring up wlan interface, download 100k file 120 time from ftp server  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Download_file_small_WEP-ITER">
    <step>min -c -t 'NFT-WLAN-Download_file_small_WEP-ITER'</step>
   </case>
   <case description="Purpose: Test upload file from ftp server via WPA tkip  connection&#xa;      Method: Bring up wlan interface, upload 100k file 120 time from ftp server  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Upload_file_small_WEP-ITER">
    <step>min -c -t 'NFT-WLAN-Upload_file_small_WEP-ITER'</step>
   </case>
   <case description="Purpose: Test download file from ftp server via wep connection&#xa;      Method: Bring up wlan interface, download 100k file 120 time from ftp server  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Download_file_small_WPAtkip-ITER">
    <step>min -c -t 'NFT-WLAN-Download_file_small_WPAtkip-ITER'</step>
   </case>
   <case description="Purpose: Test upload file from ftp server via WPA tkip connection&#xa;      Method: Bring up wlan interface, upload 100k file 120 time from ftp server  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Upload_file_small_WPAtkip-ITER">
    <step>min -c -t 'NFT-WLAN-Upload_file_small_WPAtkip-ITER'</step>
   </case>
   <case description="Purpose: Test download file from ftp server via secured connection&#xa;      Method: Bring up wlan interface, download 100k file 120 time from ftp server  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Download_file_small_WPA2aes-ITER">
    <step>min -c -t 'NFT-WLAN-Download_file_small_WPA2aes-ITER'</step>
   </case>
   <case description="Purpose: Test upload file from ftp server via secured connection&#xa;      Method: Bring up wlan interface, upload 100k file 120 time from ftp server  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Upload_file_small_WPA2aes-ITER">
    <step>min -c -t 'NFT-WLAN-Upload_file_small_WPA2aes-ITER'</step>
   </case>
   <case description="Purpose: Test download file from ftp server via unsecured connection&#xa;      Method: Bring up wlan interface, download 10MB file 120 time from ftp server  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Download_file_large-ITER">
    <step>min -c -t 'NFT-WLAN-Download_file_large-ITER'</step>
   </case>
   <case description="Purpose: Test upload file from ftp server via unsecured connection&#xa;      Method: Bring up wlan interface, upload 10MB file 120 time from ftp server  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Upload_file_large-ITER">
    <step>min -c -t 'NFT-WLAN-Upload_file_large-ITER'</step>
   </case>
   <case description="Purpose: Test download file from ftp server via wep connection&#xa;      Method: Bring up wlan interface, download 10MB file 120 time from ftp server  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Download_file_large_WEP-ITER">
    <step>min -c -t 'NFT-WLAN-Download_file_large_WEP-ITER'</step>
   </case>
   <case description="Purpose: Test upload file from ftp server via wep connection&#xa;      Method: Bring up wlan interface, upload 10MB file 120 time from ftp server  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Upload_file_large_WEP-ITER">
    <step>min -c -t 'NFT-WLAN-Upload_file_large_WEP-ITER'</step>
   </case>
   <case description="Purpose: Test download file from ftp server via secured connection&#xa;      Method: Bring up wlan interface, download 10MB file 120 time from ftp server  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Download_file_large_WPAtkip-ITER">
    <step>min -c -t 'NFT-WLAN-Download_file_large_WPAtkip-ITER'</step>
   </case>
   <case description="Purpose: Test upload file from ftp server via secured connection&#xa;      Method: Bring up wlan interface, upload 10MB file 120 time from ftp server  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Upload_file_large_WPAtkip-ITER">
    <step>min -c -t 'NFT-WLAN-Upload_file_large_WPAtkip-ITER'</step>
   </case>
   <case description="Purpose: Test download file from ftp server via secured connection&#xa;      Method: Bring up wlan interface, download 10MB file 120 time from ftp server  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Download_file_large_WPA2aes-ITER">
    <step>min -c -t 'NFT-WLAN-Download_file_large_WPA2aes-ITER'</step>
   </case>
   <case description="Purpose: Test upload file from ftp server via secured connection&#xa;      Method: Bring up wlan interface, upload 10MB file 120 time from ftp server  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Upload_file_large_WPA2aes-ITER">
    <step>min -c -t 'NFT-WLAN-Upload_file_large_WPA2aes-ITER'</step>
   </case>
   <case description="Purpose: Test download file from ftp server via unsecured connection&#xa;      Method: Bring up wlan interface, download 100K file, disconnect. Repeat 120 times  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Connect_download_file_small_disconnect-ITER">
    <step>min -c -t 'NFT-WLAN-Connect_download_file_small_disconnect-ITER'</step>
   </case>
   <case description="Purpose: Test upload file from ftp server via unsecured connection&#xa;      Method: Bring up wlan interface, upload 100K file, disconnect. Repeat 120 times  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Connect_upload_file_small_disconnect-ITER">
    <step>min -c -t 'NFT-WLAN-Connect_upload_file_small_disconnect-ITER'</step>
   </case>
   <case description="Purpose: Test download file from ftp server via secured connection&#xa;      Method: Bring up wlan interface, download 100K file, disconnect. Repeat 120 times  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Connect_download_file_small_disconnect_WEP-ITER">
    <step>min -c -t 'NFT-WLAN-Connect_download_file_small_disconnect_WEP-ITER'</step>
   </case>
   <case description="Purpose: Test upload file from ftp server via secured connection&#xa;      Method: Bring up wlan interface, upload 100K file, disconnect. Repeat 120 times  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Connect_upload_file_small_disconnect_WEP-ITER">
    <step>min -c -t 'NFT-WLAN-Connect_upload_file_small_disconnect_WEP-ITER'</step>
   </case>
   <case description="Purpose: Test download file from ftp server via secured connection&#xa;      Method: Bring up wlan interface, download 100K file, disconnect. Repeat 120 times  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Connect_download_file_small_disconnect_WPAtkip-ITER">
    <step>min -c -t 'NFT-WLAN-Connect_download_file_small_disconnect_WPAtkip-ITER'</step>
   </case>
   <case description="Purpose: Test upload file from ftp server via secured connection&#xa;      Method: Bring up wlan interface, upload 100K file, disconnect. Repeat 120 times  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Connect_upload_file_small_disconnect_WPAtkip-ITER">
    <step>min -c -t 'NFT-WLAN-Connect_upload_file_small_disconnect_WPAtkip-ITER'</step>
   </case>
   <case description="Purpose: Test download file from ftp server via secured connection&#xa;      Method: Bring up wlan interface, download 100K file, disconnect. Repeat 120 times  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Connect_download_file_small_disconnect_WPA2aes-ITER">
    <step>min -c -t 'NFT-WLAN-Connect_download_file_small_disconnect_WPA2aes-ITER'</step>
   </case>
   <case description="Purpose: Test upload file from ftp server via secured connection&#xa;      Method: Bring up wlan interface, upload 100K file, disconnect. Repeat 120 times  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Connect_upload_file_small_disconnect_WPA2aes-ITER">
    <step>min -c -t 'NFT-WLAN-Connect_upload_file_small_disconnect_WPA2aes-ITER'</step>
   </case>
   <case description="Purpose: Test download file from ftp server via unsecured connection&#xa;      Method: Bring up wlan interface, download 10MB file, disconnect. Repeat 120 times  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Connect_download_file_large_disconnect-ITER">
    <step>min -c -t 'NFT-WLAN-Connect_download_file_large_disconnect-ITER'</step>
   </case>
   <case description="Purpose: Test upload file from ftp server via unsecured connection&#xa;      Method: Bring up wlan interface, upload 10MB file, disconnect. Repeat 120 times  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Connect_upload_file_large_disconnect-ITER">
    <step>min -c -t 'NFT-WLAN-Connect_upload_file_large_disconnect-ITER'</step>
   </case>
   <case description="Purpose: Test download file from ftp server via secured connection&#xa;      Method: Bring up wlan interface, download 10MB file, disconnect. Repeat 120 times  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Connect_download_file_large_disconnect_WEP-ITER">
    <step>min -c -t 'NFT-WLAN-Connect_download_file_large_disconnect_WEP-ITER'</step>
   </case>
   <case description="Purpose: Test upload file from ftp server via secured connection&#xa;      Method: Bring up wlan interface, upload 10MB file, disconnect. Repeat 120 times  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Connect_upload_file_large_disconnect_WEP-ITER">
    <step>min -c -t 'NFT-WLAN-Connect_upload_file_large_disconnect_WEP-ITER'</step>
   </case>
   <case description="Purpose: Test download file from ftp server via secured connection&#xa;      Method: Bring up wlan interface, download 10MB file, disconnect. Repeat 120 times  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Connect_download_file_large_disconnect_WPAtkip-ITER">
    <step>min -c -t 'NFT-WLAN-Connect_download_file_large_disconnect_WPAtkip-ITER'</step>
   </case>
   <case description="Purpose: Test upload file from ftp server via secured connection&#xa;      Method: Bring up wlan interface, upload 10MB file, disconnect. Repeat 120 times  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Connect_upload_file_large_disconnect_WPAtkip-ITER">
    <step>min -c -t 'NFT-WLAN-Connect_upload_file_large_disconnect_WPAtkip-ITER'</step>
   </case>
   <case description="Purpose: Test download file from ftp server via secured connection&#xa;      Method: Bring up wlan interface, download 10MB file, disconnect. Repeat 120 times  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is downloaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Connect_download_file_large_disconnect_WPA2aes-ITER">
    <step>min -c -t 'NFT-WLAN-Connect_download_file_large_disconnect_WPA2aes-ITER'</step>
   </case>
   <case description="Purpose: Test upload file from ftp server via secured connection&#xa;      Method: Bring up wlan interface, upload 10MB file, disconnect. Repeat 120 times  &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, file is uploaded, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Connect_upload_file_large_disconnect_WPA2aes-ITER">
    <step>min -c -t 'NFT-WLAN-Connect_upload_file_large_disconnect_WPA2aes-ITER'</step>
   </case>
   <case description="Purpose: Test connecting to access point and then idle given time&#xa;      Method: Bring up wlan interface, idle, disconnect   &#xa;      Pre/Post-Conditions: &#xa;      Pass/Fail Criteria: connection to ap is made, connection stays in idle, connection is disconnected, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="100" name="NFT-WLAN-Connect_idle_disconnect">
    <step>min -c -t 'NFT-WLAN-Connect_idle_disconnect'</step>
   </case>
  </set>
  <set description="Networking performance" type="Throughput" name="NFT-WLAN-Performance">
   <case description="Purpose: Test unsecured connection upload throughput&#xa;      Method: Iperf network tool is used to measure the performance, the test case makes 7 iterations and one iteration takes 180 seconds.&#xa;      Pre/Post-Conditions: &#xa;        Pass/Fail Criteria: connection to ap made, measurements are done, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Upload_throughput-THRO">
    <step>min -c -t 'NFT-WLAN-Upload_throughput-THRO'</step>
   </case>
   <case description="Purpose: Test unsecured connection download throughput&#xa;      Method: Iperf network tool is used to measure the performance, the test case makes 7 iterations and one iteration takes 180 seconds.&#xa;      Pre/Post-Conditions: &#xa;        Pass/Fail Criteria: connection to ap made, measurements are done, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Download_throughput-THRO">
    <step>min -c -t 'NFT-WLAN-Download_throughput-THRO'</step>
   </case>
   <case description="Purpose: Test WEP connection upload throughput&#xa;      Method: Iperf network tool is used to measure the performance, the test case makes 7 iterations and one iteration takes 180 seconds.&#xa;      Pre/Post-Conditions: &#xa;        Pass/Fail Criteria: connection to ap made, measurements are done, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Upload_throughput_WEP-THRO">
    <step>min -c -t 'NFT-WLAN-Upload_throughput_WEP-THRO'</step>
   </case>
   <case description="Purpose: Test WEP connection download throughput&#xa;      Method: Iperf network tool is used to measure the performance, the test case makes 7 iterations and one iteration takes 180 seconds.&#xa;      Pre/Post-Conditions: &#xa;        Pass/Fail Criteria: connection to ap made, measurements are done, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Download_throughput_WEP-THRO">
    <step>min -c -t 'NFT-WLAN-Download_throughput_WEP-THRO'</step>
   </case>
   <case description="Purpose: Test WPA tkip connection upload throughput&#xa;      Method: Iperf network tool is used to measure the performance, the test case makes 7 iterations and one iteration takes 180 seconds.&#xa;      Pre/Post-Conditions: &#xa;        Pass/Fail Criteria: connection to ap made, measurements are done, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Upload_throughput_WPAtkip-THRO">
    <step>min -c -t 'NFT-WLAN-Upload_throughput_WPAtkip-THRO'</step>
   </case>
   <case description="Purpose: Test WPA tkip connection download throughput&#xa;      Method: Iperf network tool is used to measure the performance, the test case makes 7 iterations and one iteration takes 180 seconds.&#xa;      Pre/Post-Conditions: &#xa;        Pass/Fail Criteria: connection to ap made, measurements are done, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Download_throughput_WPAtkip-THRO">
    <step>min -c -t 'NFT-WLAN-Download_throughput_WPAtkip-THRO'</step>
   </case>
   <case description="Purpose: Test WPA2 aes connection upload throughput&#xa;      Method: Iperf network tool is used to measure the performance, the test case makes 7 iterations and one iteration takes 180 seconds.&#xa;      Pre/Post-Conditions: &#xa;        Pass/Fail Criteria: connection to ap made, measurements are done, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Upload_throughput_WPA2aes-THRO">
    <step>min -c -t 'NFT-WLAN-Upload_throughput_WPA2aes-THRO'</step>
   </case>
   <case description="Purpose: Test WPA2 aes connection download throughput&#xa;      Method: Iperf network tool is used to measure the performance, the test case makes 7 iterations and one iteration takes 180 seconds.&#xa;      Pre/Post-Conditions: &#xa;        Pass/Fail Criteria: connection to ap made, measurements are done, test does not crash &#xa;      References: &#xa;      Required test data: None." timeout="10" name="NFT-WLAN-Download_throughput_WPA2aes-THRO">
    <step>min -c -t 'NFT-WLAN-Download_throughput_WPA2aes-THRO'</step>
   </case>
  </set>
  <set description="Networking functionality" type="Latency" name="NFT-WLAN-LATE">
   <case description="Purpose: tests connection creation latency with unsaved and unsecured ap&#xa;        Method: Connection is made, latency is measured&#xa;        Pre/Post-Conditions: &#xa;        Pass/Fail Criteria: connection to wlan ap is made, test does not crash &#xa;        References: &#xa;        Required test data: None." timeout="10" name="NFT-WLAN-Connect_unsaved-LATE">
    <step>min -c -t 'NFT-WLAN-Connect_unsaved-LATE'</step>
   </case>
   <case description="Purpose: tests connection creation latency with saved unsecured ap&#xa;        Method: Connection is made, latency is measured&#xa;        Pre/Post-Conditions: &#xa;        Pass/Fail Criteria: connection to wlan ap is made, test does not crash &#xa;        References: &#xa;        Required test data: None." timeout="10" name="NFT-WLAN-Connect_saved-LATE">
    <step>min -c -t 'NFT-WLAN-Connect_saved-LATE'</step>
   </case>
   <case description="Purpose: tests connection creation latency with unsaved wep secured ap&#xa;        Method: Connection is made, latency is measured&#xa;        Pre/Post-Conditions: &#xa;        Pass/Fail Criteria: connection to wlan ap is made, test does not crash &#xa;        References: &#xa;        Required test data: None." timeout="10" name="NFT-WLAN-Connect_WEP_unsaved-LATE">
    <step>min -c -t 'NFT-WLAN-Connect_WEP_unsaved-LATE'</step>
   </case>
   <case description="Purpose: tests connection creation latency with saved wep secured ap&#xa;        Method: Connection is made, latency is measured&#xa;        Pre/Post-Conditions: &#xa;        Pass/Fail Criteria: connection to wlan ap is made, test does not crash &#xa;        References: &#xa;        Required test data: None." timeout="10" name="NFT-WLAN-Connect_WEP_saved-LATE">
    <step>min -c -t 'NFT-WLAN-Connect_WEP_saved-LATE '</step>
   </case>
   <case description="Purpose: tests connection creation latency with unsaved wpa tkip secured ap&#xa;        Method: Connection is made, latency is measured&#xa;        Pre/Post-Conditions: &#xa;        Pass/Fail Criteria: connection to wlan ap is made, test does not crash &#xa;        References: &#xa;        Required test data: None." timeout="10" name="NFT-WLAN-Connect_WPA-TKIP_unsaved-LATE">
    <step>min -c -t 'NFT-WLAN-Connect_WPA-TKIP_unsaved-LATE'</step>
   </case>
   <case description="Purpose: tests connection creation latency with saved wpa tkip secured ap&#xa;        Method: Connection is made, latency is measured&#xa;        Pre/Post-Conditions: &#xa;        Pass/Fail Criteria: connection to wlan ap is made, test does not crash &#xa;        References: &#xa;        Required test data: None." timeout="10" name="NFT-WLAN-Connect_WPA-TKIP_saved-LATE">
    <step>min -c -t 'NFT-WLAN-Connect_WPA-TKIP_saved-LATE'</step>
   </case>
   <case description="Purpose: tests connection creation latency with unsaved wpa2 aes secured ap&#xa;        Method: Connection is made, latency is measured&#xa;        Pre/Post-Conditions: &#xa;        Pass/Fail Criteria: connection to wlan ap is made, test does not crash &#xa;        References: &#xa;        Required test data: None." timeout="10" name="NFT-WLAN-Connect_WPA2-AES_unsaved-LATE">
    <step>min -c -t 'NFT-WLAN-Connect_WPA2-AES_unsaved-LATE'</step>
   </case>
   <case description="Purpose: tests connection creation latency with saved wpa2 aes secured ap&#xa;        Method: Connection is made, latency is measured&#xa;        Pre/Post-Conditions: &#xa;        Pass/Fail Criteria: connection to wlan ap is made, test does not crash &#xa;        References: &#xa;        Required test data: None." timeout="10" name="NFT-WLAN-Connect_WPA2-AES_saved-LATE">
    <step>min -c -t 'NFT-WLAN-Connect_WPA2-AES_saved-LATE'</step>
   </case>
   <case description="Purpose: tests connection creation latency with unsaved open ap&#xa;        Method: Connection is made, latency is measured&#xa;        Pre/Post-Conditions: &#xa;        Pass/Fail Criteria: connection to wlan ap is made, test does not crash &#xa;        References: &#xa;        Required test data: None." timeout="10" name="NFT-WLAN-Connect_to_unsaved_open_Access_Point-LATE">
    <step>min -c -t 'NFT-WLAN-Connect_to_unsaved_open_Access_Point-LATE'</step>
   </case>
   <case description="Purpose: tests connection creation latency with saved WPA tkip ap&#xa;        Method: Connection is made, latency is measured&#xa;        Pre/Post-Conditions: &#xa;        Pass/Fail Criteria: connection to wlan ap is made, test does not crash &#xa;        References: &#xa;        Required test data: None." timeout="10" name="NFT-WLAN-Connect_to_saved_WPA_PSK_Access_Point-LATE">
    <step>min -c -t 'NFT-WLAN-Connect_to_saved_WPA_PSK_Access_Point-LATE'</step>
   </case>
   <case name="NFT-WLAN-Application_link_opening_time-LATE">
    <description>Purpose: tests application link opening latency with saved WEP ap
        Method: Application link is opened, latency is measured
        Pre/Post-Conditions: 
        Pass/Fail Criteria: connection to wlan ap is made, test does not crash 
        References: 
        Required test data: None.</description>
    <step>min -c -t 'NFT-WLAN-Application_link_opening_time-LATE'</step>
   </case>
  </set>
  <set description="Networking functionality" type="Long lasting" name="NFT-WLAN-LOLA">
   <case description="Purpose: Test upload 2 hour upload troughput via wlan connection&#xa;        Method: Iperf network tool is used to measure the performance, the test measures for 2 hours.&#xa;        Pre/Post-Conditions: &#xa;        Pass/Fail Criteria: connection to wlan ap is made, iperf client executed 2 hours, test does not crash &#xa;        References: &#xa;        Required test data: None." timeout="10" name="NFT-WLAN-Upload_throughput-LOLA">
    <step>min -c -t 'NFT-WLAN-Upload_throughput-LOLA'</step>
   </case>
   <case description="Purpose: Test 2 hour download throughput via wlan connection&#xa;        Method: Iperf network tool is used to measure the performance, the test measures for 2 hours.&#xa;        Pre/Post-Conditions: &#xa;        Pass/Fail Criteria: connection to wlan ap ismade, iperf server measurements for 2 hours are made, test does not crash &#xa;        References: &#xa;        Required test data: None." timeout="10" name="NFT-WLAN-Download_throughput-LOLA">
    <step>min -c -t 'NFT-WLAN-Download_throughput-LOLA'</step>
   </case>
  </set>
 </suite>
</testdefinition>
