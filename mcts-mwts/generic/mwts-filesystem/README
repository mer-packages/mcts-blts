
	MWTS-FILESYSTEM
	---------------


INTRODUCTION

  mwts-filesystem is a test package aimed for measuring file system
  performance. Verifying file system performance is important
  for delivering good end user experience on the device.

  Test cases can be targeted for example following filesystems/devices:
    - MMC (fat)
    - root filesystem (ext4,ext3,ubifs)
    - temp filesystem (ext4,ext3,tmpfs)
    - eMMC (fat) (embedded memorycard)
    - eMMC (ext3,ext4)
    - USB mass storage
      
  In different test cases you can test for example for each device:
   - read throughput
   - write throughput
   - create file latency
   - create dir latency
   - remove file latency
   - remove dir latency
   - sync latency

  Build in General test case package test root file system, tmp file system and device as USB mass storage.
  Paths and devices are different in platform and devices, so you must install also platform test package,
  which installs this package or change /usr/lib/tests/FilesystemTest.conf by hand.


SOURCE CODE AND COMPILING

  Look doc/MWTS.README.

  Doxygen API documentation can be generated by running 'doxygen' in mwts-filesystem
  root directory


ENVIRONMENT REQUIREMENTS

  All test cases are executed in device except Mass Storage test cases.    

  Mass Storage test cases are executed in PC Linux.         
  You need to have USB-cable connection to device. Device asks mode and you must select mass storage mode.
  Now PC mounts automatically devices MMC and embedded MMC cards into PC.
  
  All devices don't have MMC or eMMC cards, so check what is mounted and there.
  Check also /usr/lib/tests/FilesystemTest.conf that devices mass storage cards are mounted in directories conf file says.
  If needed, correct conf to adapt your device.
  
  If device does not ask mode and you can't see in PC mounted USB mass storage devices, you can try load mass storage module.
  You can refer Internet instructions, for instance <http://www.linux-usb.org/usbtest/>.
  Connect into device. You should have root privileges in device.
  
  Check what device should be MMC cards device.
  Try to load use mass storage module by hand. 
  Command like this can work 
 
          modprobe g_file_storage file=/dev/mmcblk0p3 stall=0

  On the desktop PC you can mount mass storage device by hand:
 
          sudo mkdir -p /mnt/meego
          sudo mount -t vfat /dev/sdb /mnt/meego -o gid=<username>,uid=<username>,rw
          
  Note, that you must change /usr/lib/tests/FilesystemTest.conf to adapt these directories.

EXECUTING TESTS

  For local test cases you need to connect to device using ssh connection and
  start MIN tool using command 'min'. Look doc/MWTS.README.




TEST RESULTS

  Test results can be found from device in directory /var/log/tests/
  Result files are named according to test cases, <test_case_name>.result file contains
  overall information about test run and measured values.
  

MIN SCRIPTER INTERFACE

  SelectTarget UBI|TMP|EMMC_FAT|EMMC_EXT3|EMMC_EXT4|USBMSD_MMC|USBMSD_EMMC
     selects target where testing is done
  SelectSource UBI|TMP|EMMC_FAT|EMMC_EXT3||EMMC_EXT4|USBMSD_MMC|USBMSD_EMMC
     selects source in copy tests
  SetIterationCount <count>
     set number of iterations to be run for latency cases
  SetBlockSize <size>
     set block size for file write/read/copy cases
  SetBlockCount <count>
     set number of blocks to be transferred in write/read/copy cases
  CreateFileLatency
     test latency of creating a file on selected device
  RemoveFileLatency
     test latency of removing a file from selected device
  MoveFileLatency
     test latency of moving a file on selected device
  CreateDirLatency
     test latency of creating a directory on selected device
  RemoveDirLatency
     test latency of removing a directory from selected device
  SyncLatency
     measure data synchronization latency on device  
  ReadSpeed
     measure reading speed on selected target device
  WriteSpeed
     measure writing speed to selected target device  
  CopySpeed
     measure copying speed to from source device to target device
  FormatTarget
     format target device (if applicable)


KNOWN ISSUES

  None
