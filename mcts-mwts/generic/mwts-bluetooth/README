
MWTS-BLUETOOTH
-------------


INTRODUCTION

  mwts-bluetooth is a test package aimed for measuring Bluetooth
  performance and reliability. 

  Test cases are targeted for following areas:
    - L2CAP
    - RFCOMM
    - OBeX

  Test asset also includes functionality for device pairing
  and device scanning.

  The package is for Meego platform.

  See document MWTS.README under doc directory for detailed general 
  information about mwts test modules.
  
  
SOURCE CODE AND COMPILING

  See doc/MWTS.README for instructions.

ENVIRONMENT REQUIREMENTS

  Part of test cases requires master-slave environment. These test
  cases are using -MS suffix. Bluetooth device is required in the
  hardware.  
  
  The master-slave environment setups are explained in the doc/MWTS.README.

  Edit configuration file under /usr/lib/tests/BluetoothTest.conf,
  so that it contains your MAC addresses:

    * host_mac: mac of the other device/pc
    * master_mac: mac of master device
    * slave_mac: mac of slave device
    * headset_mac: mac of the BT headset
    * gps_mac: mac of a gps device or similar

EXECUTING TESTS

  For local test cases you need to connect to device using ssh connection and
  start MIN tool using command 'min'.
  From command line: min -c -t <test case name>
  
  If you are running a master-slave case (-MS suffix), you will need to
  specify the slave device IP address
  e.g. min -s 192.168.3.15 -c -t <test case name>

  Some cases require receive case to be started first on the other device.
  See scripts/tests.xml for information.
  Master-slave cases require that you start mind on the slave device:
  /etc/init.d/min start

TEST RESULTS

  Test results can be found from device in directory /var/log/tests/
  Result files are named according to test cases, <test_case_name>.result file contains
  overall information about test run and measured values.


MIN SCRIPT FILES

  mwts-bluetooth.cfg 
     Basic functionality test cases
  mwts-bluetooth-nft.cfg
     Non-functional test cases
  mwts-bluetooth-slave.cfg 
     Slave test cases for master-slave


MIN SCRIPTER INTERFACE

  How-to-read.
  First is the method name then is the commands you can give to it. 
  Commands are followed by parameters, marked as <parameter description>.
  Not all commands needs a parameter. The command itself is sufficient.
  Commands that cannot be in same method call are separated with | .


  Scan
     Scans for devices
  PowerMode mode <off|on>
     Sets Bluetooth device's power mode
  Transfer role <client|server> bytes <count of bytes to send> socket-type <L2CAP|RfComm> 
    buffsize <transfeer buffer size in bytes> time <time in seconds to transfer> host <host mac-address>
    Measure data transfer throughput. Parameter time is optinal meant to be used with long lasting cases
    where send is stated again until send has lasted given amount of seconds.
    You can use also host parameter, but in practise it is more reasonable to change the value from
    /usr/lib/tests/BluetoothTest.conf. This parameter means receiver devices Bluetooth MAC address.
  ScanMode mode <off|discoverable|pairable>
    Sets device discovery mode. eg. is device discoverable by others.
  Device connect|disconnect|remove host <host mac address> pin <pin code for pairing> headset client|server
    Dependent on the parameter, may connect (pairs also), disconnect or remove device.
    remove deletes the linkkey which comes with the pairing, and thus devices are not in "trusted" status anymore.
    Not availlable on C api.
  GetAddress macaddress <name where mac is to be inserted>
    Get your devices mac address and inserts it into a script value.
  SetApi dbus|c
    Makes the test case to use a specific api. C refers to hci and dbus to itself.
    This has to be set before trying any method call.
    Transfer method however can be run without this set.
  FileTransfer role <server|client> filename <name of file to send> host <host mac address>
    This transfers a concrete file between two devices. This uses Obex protocol.
    Filename specified is the name used during the transfer. It will be created from
    proto file declared in config. It will appear to /var/log/tests/data/ when transfer
    complete.
  PowerLatency mode <off|on>
    Measures the latency of turning BT device power on or off

KNOWN ISSUES

  Not supported yet
  - SDP
  
  Device command not availlable on c-api
  Some UI applications may block automation when receiving files.

