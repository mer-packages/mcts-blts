        MWTS-Telepathy
        --------------


INTRODUCTION

  Telepathy is a software framework which can be used to make software for
  interpersonal communications such as instant messaging, Voice over IP or
  videoconferencing. MWTS-telepathy is a test asset designed to test Telepathys
  Qt bindings, called Telepathy-Qt4.
  
  Those bindings are 1:1 to what services are available in Telepathy,
  implemented as Qt classes. This test asset is designed to test those classes
  and the functionality they offer. This asset is divided to few sections, to
  better handle certain concepts as a Call or Instant Messaging. For simplicity
  and ease of maintenance, the sections are kept small, and to only do what is
  necessary.

  This asset covers all the account types Telepathy-Qt4 currently offer.
  These are:
    - GTalk
    - SIP
    - Skype
  
  Due to the simplicity of Telepathy-Qt4s account handling, all the accounts
  can be used almost identically, only changing the account creation parameters.

  Currently, finished account functionality is call creation and text messaging.
  File transfer and tubes are not yet under development.

  There are different test cases for each account type:
   - create call
   - answer call
   - call creation and answering as master/slave case
   - send instant message

  See document MWTS.README under doc directory for detailed general 
  information about mwts test modules.

 
SOURCE CODE AND COMPILING

  mwts-telepathy compiles on a typical debian/linux distributions by executing

          dpkg-buildpackage -rfakeroot

  if you have missing dependencies, add them with

          apt-get install <package1> <package2> ..

  on non-debian linux system you can compile and install by (no dependency check)

          qmake
          make
          make install (as root)

  Doxygen API documentation can be generated by running 'doxygen Doxyfile' in
  mwts-telepathy root directory


ENVIRONMENT REQUIREMENTS

  This section explains specific setup which is necessary to execute test cases.
  Most of the environment setups are explained in the MWTS.README.


GENERAL STEPS

  VoIP / Instant Messaging accounts (GTalk / SIP / Skype)
     - You need to have two functional accounts for each account types, one for
        master and one for slave.
     - For testing a VoIP call / IM to account, that is not on contact list,
        extra account maybe needed. If only two accounts are used, manually remove
        slave account from master accounts contact list.
     - Configure these account to test assets configuration file
        (/usr/lib/tests/TelepathyTest.conf)


EXECUTING TESTS

  MWTS-telepathy tests are executed normally. Check the MWTS.README.
  
  
TEST RESULTS

  Test results can be found from device in directory /var/log/tests/
  Result files are named according to test cases, <test_case_name>.result file contains
  overall information about test run and measured values.


MIN SCRIPTER INTERFACE

   CreateAccount account GTALK|SIP|SKYPE
      Creates new account from configuration.
   CreateAccountFromPath path <account path>
      Creates new account from known account path.
   CallTo number <account>
      Calls to given number or account.
   CallToContact contact <account>
      Calls to given contact from contact list.
   SendTextMessageTo number <account> length <length of message> coding <character set> classtype <class> message <message text>
      Sends an instant message.
   WaitForIncomingIM
      Waits for incoming instant message.
   SendDTMF *tone 1* *tone 2 * ... *tone N*
      Sends DTMF tone through current call.
   HoldCall
      Request current call to be held.
   UnholdCall
      Request current call to be unheld.
   WaitForIncomingCall
      Wait for incoming call.
   AcceptCall
      Accept incoming call.
   EndCall
      End current call.
   RemoveAccount
      Remove current account.
   Wait time <time to wait, in msec>
      Wait given amount of time.
   StayOnLine time <time to wait, in msec>
      Wait on line of the current call going for given amount of time.
   StartLatencyMeasuring
      Start latency measurement.
   NextLatencyMeasure
      Stop current latency measurement, write it to test result and restart latency measurement.
   ReportOutgoingCallLatency
      Write outgoing call latency to test result.
   ReportIncomingCallLatency
      Write incoming call latency to test result.


KNOWN ISSUES

  - Currently GTalk implementation is not capable of calling a contact that is
    not in the callers contact list.
  - There is no implementation for file transfer for supported accounts.



ADDITIONAL RESOURCES
  http://telepathy.freedesktop.org/ - Telepathy Communications Framework
