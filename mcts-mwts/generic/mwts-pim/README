
	MWTS-PIM
	-------------


INTRODUCTION

  mwts-pim is a test package for testing personal information management functionalities in Qt mobility. mwts-pim contains 
  tests for following APIs:
	• Contacts
		• Accessing contact datastores
  		• Creating, deleting and modifying of contacts
 	        • Performance of operations
	• Versit
  		• Importing contacts from vCards
  		• Exporting contact to vCards
  		• Importing calendar items from iCalendar
  		• Exporting calendar items to iCalendar
	• Organizer
  		• Accessing calendar datastores
  		• Creating, deleting and modifying various type of calendar items
  		• Filtering different calendar items
  		• Performance of operations  

  See document MWTS.README under doc directory for detailed general 
  information about mwts test modules.
  
  
SOURCE CODE AND COMPILING

  Look doc/MWTS.README for instructions.

  Doxygen API documentation can be generated by running 'doxygen' in mwts-pim
  root directory
  

ENVIRONMENT REQUIREMENTS

  All test cases can be executed on devices that has Qt 4.7 (or higher) and Qt Mobility 1.1 (or higher) installed. 
  For the test cases to pass, proper data stores for calendar and contacts needs to be provided by the platform.  

  Environment setups are explained in the MWTS.README.
  

EXECUTING TESTS

  For local test cases you need to connect to device using ssh connection. All test cases should be run as USER.

  Test cases can be executed from:
        - MIN gui:
		start MIN tool using command 'min' and select test case name
	- Command line:
  		min -c -t <test case name>
		e.g. min -c -t FUTE-PIM-Check_calendar_datastore_availability

  To enable logging in command line, type: "export MWTS_DEBUG=1" and "export MWTS_LOG_PRINT=1"

ADDITIONAL INFORMATION 
   
   The device might have multiple data stores provided. By default device's default data store is used. In order
   to change the data store, modify parameter of "SetContactDataStore" or "SetCalendarDataStore" function
   in file "min/data/mwts-pim.cfg".

   Available data store can be listed by executing cases:   

 	 - "FUTE-PIM-Check_calendar_datastore_availability"  
	 - "FUTE-PIM-Check_contact_datastore_availability"  
 
   (Note! Check the log file (var/log/tests) for available data store names)
 
   In order to create multiple items to data store (e.g. 100 contacts to contact data store), 
   modify parameter of "SetNumberOfItems" function in file "min/data/mwts-pim.cfg".

   Calendar has 6 items by default: event, event occurrence, journal, note, todo, and todo occurrence. If a specific
   item needs to be created, use function "SetCalendarItemType <item name>" in file "min/data/mwts-pim.cfg".

   In order to enable latency measurement for saving and deleting calendar items or contacts, modify parameter of
   "SetMeasureState" in file "min/data/mwts-pim-nft.cfg".

   see MIN SCRIPTER INTERFACE below.

TEST RESULTS

  Test results can be found from device in directory /var/log/tests/
  Result files are named according to test cases, <test_case_name>.result file contains
  overall information about test run and measured values.
  
MIN SCRIPT FILES

  mwts-pim.cfg 
     FUTE test cases
  mwts-pim-nft.cfg
     Non-functional test cases
 

MIN SCRIPTER INTERFACE

  SetNumberOfItems <number>
     Selects number of items to be created
  SetIterationCount <count>
     Selects number of iterations to run
  SetMeasureState
     Sets latency measurement to be on when saving or deleting calendar items or contacts
  SetCalendarItemType event|eventoccurrence|journal|note|todo|todooccurrence
     Selects the calendar item type to be used
  SetCalendarDataStore <name>
     Selects the calendar data store to be used
  SetContactDataStore <name>
     Selects the contact data store to be used
  CreateCalendarDataStore
     Creates new calendar data store specified by the function "SetCalendarDataStore"
  CreateContactDataStore
     Creates new contact data store specified by the function "SetContactDataStore"
  CreateAvailableCalendarDatastores
     Lists all calendar data stores available and tests creating/deleting those
  CreateAvailableContactDatastores
     Lists all contact data stores available and tests creating/deleting those
  ExportContactToVcard
     Exports contact to vcard
  ImportContactFromVcard
     Imports contact from vcard
  ExportCalendarItemToIcalendar
     Exports calendar item to iCalendar
  ImportCalendarItemFromIcalendar
     Imports calendar item from iCalendar
  CreateContacts
     Creates new contacts to data store specified in SetContactDataStore
  ModifyContacts
     Modifies contacts in data store specified in SetContactDataStore
  RemoveContacts
     Removes contacts from data store specified in SetContactDataStore
  SearchContacts
     Searches contacts by using default search filters
  CreateCalendarItems
     Creates new calendar items to data store specified in SetCalendarDataStore
  ModifyCalendarItems 
     Modifies calendar items from data store specified in SetCalendarDataStore
  RemoveCalendarItems
     Deletes calendar items from data store specified in SetCalendarDataStore
  SearchDefaultCalendarItems
     Searches default calendar items by using different search filters
  
KNOWN ISSUES

  None.


