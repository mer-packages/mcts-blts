#!/usr/bin/python
# Copyright (C) 2008-2010, Intel Corporation.
# DESCR: oFono Advanced Of Charge test script
#
# This program is free software; you can redistribute it and/or modify it
# under the terms and conditions of the GNU General Public License,
# version 2, as published by the Free Software Foundation.
#
# This program is distributed in the hope it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 59 Temple
# Place - Suite 330, Boston, MA 02111-1307 USA.
#
# Authors:
#       Li,Zhigang  <zhigang.li@intel.com>
#

import sys
import dbus

def print_useage(s):
	print "the property is PricePerUnit, Currency, AccumulatedCallMeterMaximum"
	print "Useage: %s set <property> <value> <pin2>" % (s)
	print "Useage: %s reset <pin2>" % (s)
	print "Useage: %s properties" % (s)

if len(sys.argv) < 2:
	print_useage(sys.argv[0])
	sys.exit(1);

bus = dbus.SystemBus()

manager = dbus.Interface(bus.get_object('org.ofono', '/'),
		'org.ofono.Manager')

modems = manager.GetProperties()['Modems']

cm = dbus.Interface(bus.get_object('org.ofono', modems[0]),
		'org.ofono.CallMeter')

if sys.argv[1] == 'reset':
	if len(sys.argv) < 3:
		print"please input pin2 code"
		sys.exit(1)

	pin2 = sys.argv[2]
	print "Resetting Accumulated Call Meter"
	try:
		cm.Reset(pin2)
		sys.exit(0)
	except dbus.DBusException, e:
		print "Unable to reset ACM: ", e
		sys.exit(1)

if sys.argv[1] == 'set':
	if len(sys.argv) < 5:
		print"please input property,new value and pin2"
		sys.exit(1)

	property = sys.argv[2]
	value = sys.argv[3]
	pin2 = sys.argv[4]

	try:
		if property == 'AccumulatedCallMeterMaximum':
			value = dbus.UInt32(value)
		elif property == 'PricePerUnit':
			value = float(value)
		cm.SetProperty(property, value, pin2)
		sys.exit(0)
	except dbus.DBusException, e:
		print "Unable to set property: ", e
		sys.exit(1)

if sys.argv[1] == "properties":
	try:
		properties = cm.GetProperties()
	except dbus.DBusException, e:
		print "Unable to set property: ", e
		sys.exit(1)
	for key in properties.keys():
		print "  %s = %s" % (key, properties[key])
	sys.exit(0)

print "Unknown command"
sys.exit(1)

