<?xml version="1.0" encoding="utf-8"?>
<!-- tests.xml - Test case descriptions for automation tools.

   Copyright (C) 2000-2010, Nokia Corporation.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, version 2.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.

-->

<!-- Replace 00:00:00:00:00:00 with remote device MAC. -->

<testdefinition version="1.0">
  <suite name="blts-bluetooth-tests" domain="Core">
    <set name="bt-1dev-tests" feature="BT and WLAN drivers">
      <case name="Core-Bluetooth%20drivers%20and%20userspace%20check">
        <step>/usr/bin/blts-bluetooth-tests -l /var/log/tests/Core-Bluetooth%20drivers%20and%20userspace%20check.log -en "Core-Bluetooth drivers and userspace check"</step>
      </case>
      <case name="Core-Bluetooth%20scan">
        <step>/usr/bin/blts-bluetooth-tests -l /var/log/tests/Core-Bluetooth%20scan.log -en "Core-Bluetooth scan"</step>
      </case>
      <get>
	<file>/var/log/tests/Core-Bluetooth%20drivers%20and%20userspace%20check.log</file>
	<file>/var/log/tests/Core-Bluetooth%20scan.log</file>
      </get>
    </set>

    <set name="bt-2dev-tests" feature="Bluetooth">
      <case name="Core-Bluetooth%20receive%20L2CAP%20connection">
        <step>/usr/bin/blts-bluetooth-tests -l /var/log/tests/Core-Bluetooth%20receive%20L2CAP%20connection.log -en "Core-Bluetooth receive L2CAP connection"</step>
      </case>

      <!-- Remote must be running l2cap-server for following 2: -->
      <case name="Core-Bluetooth%20connect%20with%20L2CAP">
	<!-- FIXME: start remote end here -->
        <step>/usr/bin/blts-bluetooth-tests -l /var/log/tests/Core-Bluetooth%20connect%20with%20L2CAP.log -en "Core-Bluetooth connect with L2CAP" 00:00:00:00:00:00</step>
      </case>

      <case name="Core-Bluetooth%20ping-pong%20transfer%20with%20L2CAP">
	<!-- FIXME: start remote end here -->
        <step>/usr/bin/blts-bluetooth-tests -l /var/log/tests/Core-Bluetooth%20ping-pong%20transfer%20with%20L2CAP.log -en "Core-Bluetooth ping-pong transfer with L2CAP" 00:00:00:00:00:00</step>
      </case>

      <case name="Core-Bluetooth%20receive%20RFCOMM%20connection">
        <step>/usr/bin/blts-bluetooth-tests -l /var/log/tests/Core-Bluetooth%20receive%20RFCOMM%20connection.log -en "Core-Bluetooth receive RFCOMM connection"</step>
      </case>

      <!-- Remote must be running rfcomm-server for following 2: -->
      <case name="Core-Bluetooth%20connect%20with%20RFCOMM">
	<!-- FIXME: start remote end here -->
        <step>/usr/bin/blts-bluetooth-tests -l /var/log/tests/Core-Bluetooth%20connect%20with%20RFCOMM.log -en "Core-Bluetooth connect with RFCOMM" 00:00:00:00:00:00</step>
      </case>

      <case name="Core-Bluetooth%20ping-pong%20transfer%20with%20RFCOMM">
	<!-- FIXME: start remote end here -->
        <step>/usr/bin/blts-bluetooth-tests -l /var/log/tests/Core-Bluetooth%20ping-pong%20transfer%20with%20RFCOMM.log -en "Core-Bluetooth ping-pong transfer with RFCOMM" 00:00:00:00:00:00</step>
      </case>

      <case name="Core-Bluetooth%20connect%20with%20HCI">
	<!-- FIXME: start remote end here -->
        <step>/usr/bin/blts-bluetooth-tests -l /var/log/tests/Core-Bluetooth%20connect%20with%20HCI.log -en "Core-Bluetooth connect with HCI" 00:00:00:00:00:00</step>
      </case>

      <!-- Following 2 are run as a pair: -->
      <case name="Core-Bluetooth%20transfer%20ACL%20data%20with%20HCI">
	<!-- FIXME: start remote end here -->
        <step>/usr/bin/blts-bluetooth-tests -l /var/log/tests/Core-Bluetooth%20transfer%20ACL%20data%20with%20HCI.log -en "Core-Bluetooth transfer ACL data with HCI" 00:00:00:00:00:00</step>
      </case>
      <case name="Core-Bluetooth%20receive%20ACL%20data%20with%20HCI">
        <step>/usr/bin/blts-bluetooth-tests -l /var/log/tests/Core-Bluetooth%20receive%20ACL%20data%20with%20HCI.log -en "Core-Bluetooth receive ACL data with HCI"</step>
      </case>

      <!-- Following 2 are run as a pair: -->
      <case name="Core-Bluetooth%20change%20name%20with%20HCI">
        <step>/usr/bin/blts-bluetooth-tests -l /var/log/tests/Core-Bluetooth%20change%20name%20with%20HCI.log -en "Core-Bluetooth change name with HCI"</step>
      </case>
      <case name="Core-Bluetooth%20verify%20name%20with%20remote%20HCI">
	<!-- FIXME: start remote end here -->
        <step>/usr/bin/blts-bluetooth-tests -l /var/log/tests/Core-Bluetooth%20verify%20name%20with%20remote%20HCI.log -en "Core-Bluetooth verify name with remote HCI" 00:00:00:00:00:00</step>
      </case>

      <!-- Following 2 are run as a pair: -->
      <case name="Core-Bluetooth%20change%20class%20with%20HCI">
        <step>/usr/bin/blts-bluetooth-tests -l /var/log/tests/Core-Bluetooth%20change%20class%20with%20HCI.log -en "Core-Bluetooth change class with HCI"</step>
      </case>
      <case name="Core-Bluetooth%20verify%20class%20with%20remote%20HCI">
	<!-- FIXME: start remote end here -->
        <step>/usr/bin/blts-bluetooth-tests -l /var/log/tests/Core-Bluetooth%20verify%20class%20with%20remote%20HCI.log -en "Core-Bluetooth verify class with remote HCI" 00:00:00:00:00:00</step>
      </case>

      <case name="Core-Bluetooth%20reset%20connection%20with%20HCI">
	<!-- FIXME: start remote end here -->
        <step>/usr/bin/blts-bluetooth-tests -l /var/log/tests/Core-Bluetooth%20reset%20connection%20with%20HCI.log -en "Core-Bluetooth reset connection with HCI" 00:00:00:00:00:00</step>
      </case>

      <!-- Following 2 are run as a pair: -->
      <case name="Core-Bluetooth%20Read%20HCI%20controller%20information%20local">
        <step>/usr/bin/blts-bluetooth-tests -l /var/log/tests/Core-Bluetooth%20Read%20HCI%20controller%20information%20local.log -en "Core-Bluetooth Read HCI controller information local"</step>
      </case>
      <case name="Core-Bluetooth%20Read%20HCI%20controller%20information%20remote">
	<!-- FIXME: start remote end here -->
        <step>/usr/bin/blts-bluetooth-tests -l /var/log/tests/Core-Bluetooth%20Read%20HCI%20controller%20information%20remote.log -en "Core-Bluetooth Read HCI controller information remote" 00:00:00:00:00:00</step>
      </case>

      <!-- Following 2 are run as a pair: -->
      <case name="Core-Bluetooth%20Read%20connected%20link%20information%20local">
        <step>/usr/bin/blts-bluetooth-tests -l /var/log/tests/Core-Bluetooth%20Read%20connected%20link%20information%20local.log -en "Core-Bluetooth Read connected link information local"</step>
      </case>
      <case name="Core-Bluetooth%20Read%20connected%20link%20information%20remote">
	<!-- FIXME: start remote end here -->
        <step>/usr/bin/blts-bluetooth-tests -l /var/log/tests/Core-Bluetooth%20Read%20connected%20link%20information%20remote.log -en "Core-Bluetooth Read connected link information remote" 00:00:00:00:00:00</step>
      </case>

      <case name="Core-Bluetooth%20audit%20incoming%20HCI%20connection">
	<!-- FIXME: start remote end here -->
        <step>/usr/bin/blts-bluetooth-tests -l /var/log/tests/Core-Bluetooth%20audit%20incoming%20HCI%20connection.log -en "Core-Bluetooth audit incoming HCI connection"</step>
      </case>

      <!-- Following 2 are run as a pair: -->
      <case name="Core-Bluetooth%20authentication%20with%20pairing%20as%20master">
	<step>initctl stop bluetoothd</step>
	<!-- FIXME: start remote end here -->
        <step>/usr/bin/blts-bluetooth-tests -l /var/log/tests/Core-Bluetooth%20authentication%20with%20pairing%20as%20master.log -en "Core-Bluetooth authentication with pairing as master" 00:00:00:00:00:00</step>
	<step>initctl start bluetoothd</step>
      </case>
      <case name="Core-Bluetooth%20authentication%20with%20pairing%20as%20slave">
	<step>initctl stop bluetoothd</step>
        <step>/usr/bin/blts-bluetooth-tests -l /var/log/tests/Core-Bluetooth%20authentication%20with%20pairing%20as%20slave.log -en "Core-Bluetooth authentication with pairing as slave"</step>
	<step>initctl start bluetoothd</step>
      </case>

      <get>
	<file>/var/log/tests/Core-Bluetooth%20connect%20with%20L2CAP.log</file>
	<file>/var/log/tests/Core-Bluetooth%20ping-pong%20transfer%20with%20L2CAP.log</file>
	<file>/var/log/tests/Core-Bluetooth%20connect%20with%20RFCOMM.log</file>
	<file>/var/log/tests/Core-Bluetooth%20ping-pong%20transfer%20with%20RFCOMM.log</file>
	<file>/var/log/tests/Core-Bluetooth%20connect%20with%20HCI.log</file>
	<file>/var/log/tests/Core-Bluetooth%20transfer%20ACL%20data%20with%20HCI.log</file>
	<file>/var/log/tests/Core-Bluetooth%20receive%20ACL%20data%20with%20HCI.log</file>
	<file>/var/log/tests/Core-Bluetooth%20change%20name%20with%20HCI.log</file>
	<file>/var/log/tests/Core-Bluetooth%20verify%20name%20with%20remote%20HCI.log</file>
	<file>/var/log/tests/Core-Bluetooth%20change%20class%20with%20HCI.log</file>
	<file>/var/log/tests/Core-Bluetooth%20verify%20class%20with%20remote%20HCI.log</file>
	<file>/var/log/tests/Core-Bluetooth%20reset%20connection%20with%20HCI.log</file>
	<file>/var/log/tests/Core-Bluetooth%20Read%20HCI%20controller%20information%20local.log</file>
	<file>/var/log/tests/Core-Bluetooth%20Read%20HCI%20controller%20information%20remote.log</file>
	<file>/var/log/tests/Core-Bluetooth%20Read%20connected%20link%20information%20local.log</file>
	<file>/var/log/tests/Core-Bluetooth%20Read%20connected%20link%20information%20remote.log</file>
	<file>/var/log/tests/Core-Bluetooth%20audit%20incoming%20HCI%20connection.log</file>
	<file>/var/log/tests/Core-Bluetooth%20authentication%20with%20pairing%20as%20master.log</file>
	<file>/var/log/tests/Core-Bluetooth%20authentication%20with%20pairing%20as%20slave.log</file>
      </get>
    </set>
  </suite>
</testdefinition>

