<?xml version="1.0" encoding="utf-8"?>
<!-- tests.xml - Test case descriptions for automation tools.

   Copyright (C) 2000-2010, Nokia Corporation.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, version 2.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.

-->
<testdefinition version="1.0">
  <suite name="blts-opengles2-tests" domain="Graphics">
    <set name="gles2-smoke" feature="OpenGL ES 2">
      <case name="OpenGL-Enumerate GL extensions"
        description="Lists all GL extensions"
        type="Functional positive">
        <step>/usr/bin/blts-opengles2-tests -l /var/log/tests/OpenGL-Enumerate_GL_extensions.log -en "OpenGL-Enumerate GL extensions"</step>
      </case>
      <case name="OpenGL-Enumerate EGL extensions"
        description="Lists all EGL extensions"
        type="Functional positive">
        <step>/usr/bin/blts-opengles2-tests -l /var/log/tests/OpenGL-Enumerate_EGL_extensions.log -en "OpenGL-Enumerate EGL extensions"</step>
      </case>
      <case name="OpenGL-Enumerate EGL configs"
        description="Lists all EGL configurations"
        type="Functional positive">
        <step>/usr/bin/blts-opengles2-tests -l /var/log/tests/OpenGL-Enumerate_EGL_configs.log -en "OpenGL-Enumerate EGL configs"</step>
      </case>
      <case name="OpenGL-Simple triangle"
        description="Draws simple three vertex rotating triangle"
        type="Functional positive">
        <step>/usr/bin/blts-opengles2-tests -l /var/log/tests/OpenGL-Simple_triangle.log -en "OpenGL-Simple triangle"</step>
      </case>
      <get>
        <file>"/var/log/tests/OpenGL-Enumerate_GL_extensions.log"</file>
        <file>"/var/log/tests/OpenGL-Enumerate_EGL_extensions.log"</file>
        <file>"/var/log/tests/OpenGL-Enumerate_EGL_configs.log"</file>
        <file>"/var/log/tests/OpenGL-Simple_triangle.log"</file>
      </get>
    </set>

    <set name="benchmarks" feature="OpenGL ES 2">
      <case name="OpenGL-Simple blit"
        description="Draw large textured planes"
        type="Performance">
        <step>/usr/bin/blts-opengles2-tests -l /var/log/tests/OpenGL-Simple_blit.log -en "OpenGL-Simple blit" -csv /var/log/tests/OpenGL-Simple_blit.csv</step>
	<get>
          <file measurement="true">/var/log/tests/OpenGL-Simple_blit.csv</file>
	</get>
      </case>
      <case name="OpenGL-Blit with blend"
        description="Draw large textured planes. Multiple layers with blend."
        type="Performance">
        <step>/usr/bin/blts-opengles2-tests -l /var/log/tests/OpenGL-Blit_with_blend.log -en "OpenGL-Blit with blend" -csv /var/log/tests/OpenGL-Blit_with_blend.csv</step>
	<get>
          <file measurement="true">/var/log/tests/OpenGL-Blit_with_blend.csv</file>
	</get>
      </case>
      <case name="OpenGL-Blit with blend and widgets"
        description="Draw large textured planes. Multiple layers with blend. Draw 'widgets' on the topmost plane."
        type="Performance">
        <step>/usr/bin/blts-opengles2-tests -l /var/log/tests/OpenGL-Blit_with_blend_and_widgets.log -en "OpenGL-Blit with blend and widgets" -csv /var/log/tests/OpenGL-Blit_with_blend_and_widgets.csv</step>
	<get>
          <file measurement="true">/var/log/tests/OpenGL-Blit_with_blend_and_widgets.csv</file>
	</get>
      </case>
      <case name="OpenGL-Blit with blend and widgets with shadows"
        description="Draw large textured planes. Multiple layers with blend. Draw 'widgets' on the topmost plane. Each widget has a shadow."
        type="Performance">
        <step>/usr/bin/blts-opengles2-tests -l /var/log/tests/OpenGL-Blit_with_blend_and_widgets_with_shadows.log -en "OpenGL-Blit with blend and widgets with shadows" -csv /var/log/tests/OpenGL-Blit_with_blend_and_widgets_with_shadows.csv</step>
	<get>
          <file measurement="true">/var/log/tests/OpenGL-Blit_with_blend_and_widgets_with_shadows.csv</file>
	</get>
      </case>
      <case name="OpenGL-Blit with blend and widgets with shadows + particles"
        description="Draw large textured planes. Multiple layers with blend. Draw 'widgets' on the topmost plane. Each widget has a shadow. Add particles to each widget."
        type="Performance">
        <step>/usr/bin/blts-opengles2-tests -l /var/log/tests/OpenGL-Blit_with_blend_and_widgets_with_shadows_+_particles.log -en "OpenGL-Blit with blend and widgets with shadows + particles" -csv /var/log/tests/OpenGL-Blit_with_blend_and_widgets_with_shadows_+_particles.csv</step>
	<get>
          <file measurement="true">/var/log/tests/OpenGL-Blit_with_blend_and_widgets_with_shadows_+_particles.csv</file>
	</get>
      </case>
      <case name="OpenGL-Blit with blend and widgets with shadows + particles + rotate"
        description="Draw large textured planes. Multiple layers with blend. Draw 'widgets' on the topmost plane. Each widget has a shadow. Add particles to each widget. Rotate the entire scene."
        type="Performance">
        <step>/usr/bin/blts-opengles2-tests -l /var/log/tests/OpenGL-Blit_with_blend_and_widgets_with_shadows_+_particles_+_rotate.log -en "OpenGL-Blit with blend and widgets with shadows + particles + rotate" -csv /var/log/tests/OpenGL-Blit_with_blend_and_widgets_with_shadows_+_particles_+_rotate.csv</step>
	<get>
          <file measurement="true">/var/log/tests/OpenGL-Blit_with_blend_and_widgets_with_shadows_+_particles_+_rotate.csv</file>
	</get>
      </case>
      <case name="OpenGL-Blit with blend and widgets with shadows + particles + rotate + zoom"
        description="Draw large textured planes. Multiple layers with blend. Draw 'widgets' on the topmost plane. Each widget has a shadow. Add particles to each widget. Rotate and zoom the entire scene."
        type="Performance">
        <step>/usr/bin/blts-opengles2-tests -l /var/log/tests/OpenGL-Blit_with_blend_and_widgets_with_shadows_+_particles_+_rotate_+_zoom.log -en "OpenGL-Blit with blend and widgets with shadows + particles + rotate + zoom" -csv /var/log/tests/OpenGL-Blit_with_blend_and_widgets_with_shadows_+_particles_+_rotate_+_zoom.csv</step>
	<get>
          <file measurement="true">/var/log/tests/OpenGL-Blit_with_blend_and_widgets_with_shadows_+_particles_+_rotate_+_zoom.csv</file>
	</get>
      </case>
      <case name="OpenGL-Blit with blend and widgets with shadows + particles + rotate + zoom and blur all"
        description="Draw large textured planes. Multiple layers with blend. Draw 'widgets' on the topmost plane. Each widget has a shadow. Add particles to each widget. Rotate and zoom the entire scene. Add blur."
        type="Performance">
        <step>/usr/bin/blts-opengles2-tests -l /var/log/tests/OpenGL-Blit_with_blend_and_widgets_with_shadows_+_particles_+_rotate_+_zoom_and_blur_all.log -en "OpenGL-Blit with blend and widgets with shadows + particles + rotate + zoom and blur all" -csv /var/log/tests/OpenGL-Blit_with_blend_and_widgets_with_shadows_+_particles_+_rotate_+_zoom_and_blur_all.csv</step>
	<get>
          <file measurement="true">/var/log/tests/OpenGL-Blit_with_blend_and_widgets_with_shadows_+_particles_+_rotate_+_zoom_and_blur_all.csv</file>
	</get>
      </case>
      <case name="OpenGL-Blit with blend and animated widgets with shadows"
        description="Draw large textured planes. Multiple layers with blend. Draw animated 'widgets' on the topmost plane. Each widget has a shadow."
        type="Performance">
        <step>/usr/bin/blts-opengles2-tests -l /var/log/tests/OpenGL-Blit_with_blend_and_animated_widgets_with_shadows.log -en "OpenGL-Blit with blend and animated widgets with shadows" -csv /var/log/tests/OpenGL-Blit_with_blend_and_animated_widgets_with_shadows.csv</step>
	<get>
          <file measurement="true">/var/log/tests/OpenGL-Blit_with_blend_and_animated_widgets_with_shadows.csv</file>
	</get>
      </case>
      <case name="OpenGL-Polygons-per-second"
        description="Synthetic test. Draws a one million triangle sphere."
        type="Performance">
        <step>/usr/bin/blts-opengles2-tests -l /var/log/tests/OpenGL-Polygons-per-second.log -en "OpenGL-Polygons-per-second" -csv /var/log/tests/OpenGL-Polygons-per-second.csv</step>
	<get>
          <file measurement="true">/var/log/tests/OpenGL-Polygons-per-second.csv</file>
	</get>
      </case>
      <case name="OpenGL-Fillrate test"
        description="Synthetic test. Fills a plane with changing color."
        type="Performance">
        <step>/usr/bin/blts-opengles2-tests -l /var/log/tests/OpenGL-Fillrate_test.log -en "OpenGL-Fillrate test" -csv /var/log/tests/OpenGL-Fillrate_test.csv</step>
	<get>
          <file measurement="true">/var/log/tests/OpenGL-Fillrate_test.csv</file>
	</get>
      </case>
      <case name="OpenGL-Texels-per-second"
        description="Synthetic test. Fills a plane with big texture."
        type="Performance">
        <step>/usr/bin/blts-opengles2-tests -l /var/log/tests/OpenGL-Texels-per-second.log -en "OpenGL-Texels-per-second" -csv /var/log/tests/OpenGL-Texels-per-second.csv</step>
	<get>
          <file measurement="true">/var/log/tests/OpenGL-Texels-per-second.csv</file>
	</get>
      </case>
      <case name="OpenGL-Fragment shader performance"
        description="Synthetic test. Calculates and draws a mandelbrot set with waves on fragment shader."
        type="Performance">
        <step>/usr/bin/blts-opengles2-tests -l /var/log/tests/OpenGL-Fragment_shader_performance.log -en "OpenGL-Fragment shader performance" -csv /var/log/tests/OpenGL-Fragment_shader_performance.csv</step>
	<get>
          <file measurement="true">/var/log/tests/OpenGL-Fragment_shader_performance.csv</file>
	</get>
      </case>
      <case name="OpenGL-Vertex shader performance"
        description="Synthetic test. Uses a heavy algorithm to deform a plane to wavy ball."
        type="Performance">
        <step>/usr/bin/blts-opengles2-tests -l /var/log/tests/OpenGL-Vertex_shader_performance.log -en "OpenGL-Vertex shader performance" -csv /var/log/tests/OpenGL-Vertex_shader_performance.csv</step>
	<get>
          <file measurement="true">/var/log/tests/OpenGL-Vertex_shader_performance.csv</file>
	</get>
      </case>
      <case name="OpenGL-Convolution filter"
        description="Configurable, generic convolution filter test."
        type="Performance">
        <step>/usr/bin/blts-opengles2-tests -l /var/log/tests/OpenGL-Convolution_filter.log -en "OpenGL-Convolution filter" -csv /var/log/tests/OpenGL-Convolution_filter.csv</step>
	<get>
          <file measurement="true">/var/log/tests/OpenGL-Convolution_filter.csv</file>
	</get>
      </case>
      <get>
	<file>/var/log/tests/OpenGL-Simple_blit.log</file>
	<file>/var/log/tests/OpenGL-Blit_with_blend.log</file>
	<file>/var/log/tests/OpenGL-Blit_with_blend_and_widgets.log</file>
	<file>/var/log/tests/OpenGL-Blit_with_blend_and_widgets_with_shadows.log</file>
	<file>/var/log/tests/OpenGL-Blit_with_blend_and_widgets_with_shadows_+_particles.log</file>
	<file>/var/log/tests/OpenGL-Blit_with_blend_and_widgets_with_shadows_+_particles_+_rotate.log</file>
	<file>/var/log/tests/OpenGL-Blit_with_blend_and_widgets_with_shadows_+_particles_+_rotate_+_zoom.log</file>
	<file>/var/log/tests/OpenGL-Blit_with_blend_and_widgets_with_shadows_+_particles_+_rotate_+_zoom_and_blur_all.log</file>
	<file>/var/log/tests/OpenGL-Blit_with_blend_and_animated_widgets_with_shadows.log</file>
	<file>/var/log/tests/OpenGL-Polygons-per-second.log</file>
	<file>/var/log/tests/OpenGL-Fillrate_test.log</file>
	<file>/var/log/tests/OpenGL-Texels-per-second.log</file>
	<file>/var/log/tests/OpenGL-Fragment_shader_performance.log</file>
	<file>/var/log/tests/OpenGL-Vertex_shader_performance.log</file>
	<file>/var/log/tests/OpenGL-Convolution_filter.log</file>
      </get>
    </set>
  </suite>
</testdefinition>
